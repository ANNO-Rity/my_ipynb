{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNS7y+QobsAmt7uLWEf6dTW"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Upgrade pip"],"metadata":{"id":"9IesSyx3Ramw"}},{"cell_type":"code","source":["!pip install --upgrade pip"],"metadata":{"id":"Zx4B36riRfHG"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Install Numpy"],"metadata":{"id":"s-0bJs10RstI"}},{"cell_type":"code","source":["!pip install numpy"],"metadata":{"id":"qNm9l1YFRukF"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#install Matplotlib"],"metadata":{"id":"lqvtN5YOZht4"}},{"cell_type":"code","source":["!pip install matplotlib"],"metadata":{"id":"VHWbjZNWZoiz"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Install Transformers"],"metadata":{"id":"bKXthC2NZ3jZ"}},{"cell_type":"code","source":["!pip install transformers"],"metadata":{"id":"YKjdwDEaZ6Hc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Install Pandas"],"metadata":{"id":"_uyFmrW4aNr3"}},{"cell_type":"code","source":["!pip install pandas"],"metadata":{"id":"6RtN9Q_ZaQWe"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#Install Torch"],"metadata":{"id":"jWJGsmj2abSf"}},{"cell_type":"code","source":["!pip install torch"],"metadata":{"id":"ElCO8Ug-afiH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#pip3 install git+https://github.com/JustAnotherArchivist/snscrape.git"],"metadata":{"id":"h7RVPc-8bD69"}},{"cell_type":"code","source":["!pip3 install git+https://github.com/JustAnotherArchivist/snscrape.git"],"metadata":{"id":"7DR3JpmlbGbk"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Program"],"metadata":{"id":"MbYf-508wSFB"}},{"cell_type":"code","source":["import snscrape.modules.twitter as sntwitter\n","from transformers import AutoTokenizer, AutoModelForSequenceClassification\n","from scipy.special import softmax\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import re, time\n","\n","# Use Advanced Search on TWITTER\n","query = \"(owi OR jokowi) lang:id\"\n","#\n","tweets = []\n","ttweets = []\n","# max tweet\n","limit = 10\n","#\n","plus = []\n","net = []\n","min =[]\n","\n","def pet(x):\n","    s = scores[x]\n","    return s\n","#pie chart\n","def pc(p, n, m):\n","    labels = 'Positif', 'Netral', 'Negatif'\n","    sizes = [p, n, m]\n","\n","    fig, ax = plt.subplots()\n","    ax.pie(sizes, labels=labels, autopct='%1.1f%%')\n","    ax.set(title =\"Sentimen Analisis \")\n","    plt.show()\n","    \n","# filter tweet\n","def ct(tweet):\n","        # Remove Links, Special Characters etc from tweet\n","        return ' '.join(re.sub(\"(https://[A-Za-z0-9-.-/]+)|(#[A-Za-z0-9-_]+)|(@[A-Za-z0-9-_]+)|([^0-9A-Za-z \\t]) | (\\w +:\\ / \\ / \\S +)\", \" \", tweet).split())\n","\n","#get tweet\n","for tweet in sntwitter.TwitterSearchScraper(query).get_items():\n","    if len(tweets) == limit:\n","        break\n","    else:\n","        tweets.append(tweet.content) # kanggo roberta\n","        ttweets.append([tweet.date, tweet.username, tweet.content]) # kanggo data simpenan\n","\n","# load model and tokenizer\n","roberta = \"w11wo/indonesian-roberta-base-sentiment-classifier\"\n","\n","model = AutoModelForSequenceClassification.from_pretrained(roberta)\n","tokenizer = AutoTokenizer.from_pretrained(roberta)\n","\n","# sentiment analysis\n","for i in range(len(tweets)):\n","    ab= ct(str(tweets[i]))\n","    encoded_tweet = tokenizer(ab, return_tensors='pt')\n","    # output = model(encoded_tweet['input_ids'], encoded_tweet['attention_mask'])\n","    output = model(**encoded_tweet)\n","    scores = output[0][0].detach().numpy()\n","    scores = softmax(scores)\n","\n","    if pet(0)>pet(1) and pet(0)>pet(2):\n","        plus.append(1)\n","    elif pet(1)>pet(0) and pet(1)>pet(2):\n","        net.append(1)\n","    else:\n","        min.append(1)\n","    \n","df = pd.DataFrame(ttweets, columns=['Date', 'User', 'Tweet'])\n","te = time.strftime(\"%Y%m%d-%H%M%S\")\n","# to save to csv\n","df.to_csv('tweets berjumlah_'+str(len(tweets))+'_pada_'+te+'.csv')\n","\n","#plt.savefig('SA_'+te+'.png') # blank png\n","print(str(len(tweets)))\n","pc(len(plus), len(net), len(min))"],"metadata":{"id":"-8dhST-TwdTc"},"execution_count":null,"outputs":[]}]}